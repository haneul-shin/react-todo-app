{"version":3,"sources":["components/InputForm.js","components/EditForm.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["InputForm","props","useState","input","setInput","handleSubmit","e","preventDefault","onSubmit","id","Math","floor","random","title","isCompleted","className","type","placeholder","name","value","onChange","target","onClick","EditForm","todo","TodoItem","todos","completeTodo","deleteTodo","updateTodo","edit","setEdit","defaultChecked","TodoList","map","App","setTodos","newTodos","completed","deleted","filter","newValue","test","prev","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4a14dec.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction InputForm(props) {\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      title: input,\r\n      isCompleted: false\r\n    });\r\n\r\n    setInput('');\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"todo-input\"\r\n        type='text'\r\n        placeholder='Add a todo...'\r\n        name='title'\r\n        value={input}\r\n        onChange={handleChange}  \r\n      />\r\n      <button className='todo-button' onClick={handleSubmit}>Add Todo</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default InputForm\r\n","import React, { useState } from 'react'\r\n\r\nfunction EditForm(props) {\r\n  const [input, setInput] = useState('');\r\n  \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: props.todo.id,\r\n      title: input,\r\n      isCompleted: props.todo.isCompleted\r\n    });\r\n\r\n    setInput('');\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-row edit\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"todo-input edit\"\r\n        type='text'\r\n        placeholder='Update the todo...'\r\n        name='title'\r\n        value={input}\r\n        onChange={handleChange}  \r\n      />\r\n      <button className='todo-button edit' onClick={handleSubmit}>Edit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EditForm\r\n","import React, { useState } from 'react'\r\n\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport EditForm from './EditForm';\r\n\r\nfunction TodoItem({todos, completeTodo, deleteTodo, updateTodo}) {\r\n    \r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const editTodo = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null, value: ''\r\n    });\r\n  };\r\n\r\n  if(edit.id) {\r\n    return <EditForm edit={edit} onSubmit={editTodo} todo={todos}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={todos.isCompleted ? 'todo-row complete' : 'todo-row'}>\r\n      <div className=\"todo-item\">\r\n        <input id=\"todo-check\" type=\"checkbox\" defaultChecked={todos.isCompleted} onClick={() => completeTodo(todos.id)}/>\r\n        {todos.title}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <TiEdit className='edit-icon' onClick={() => setEdit({ id:todos.id, value: todos.title })} />\r\n        <RiCloseCircleLine className='delete-icon' onClick={() => deleteTodo(todos.id)} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nfunction TodoList({todos, completeTodo, deleteTodo, updateTodo}) {\r\n  return todos.map(todos => (\r\n    <TodoItem todos={todos} completeTodo={completeTodo} deleteTodo={deleteTodo} updateTodo={updateTodo} />\r\n  ));\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState } from 'react'\nimport { RiDoorClosedFill } from 'react-icons/ri';\nimport './App.css';\nimport InputForm from './components/InputForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    \n    const newTodos = [...todos, todo]\n    \n    setTodos(newTodos);\n  }\n\n  const completeTodo = id => {\n    const completed = todos.map(todo => {\n      if(todo.id === id) {\n        todo.isCompleted = !todo.isCompleted;\n      }\n      return todo;\n    });\n    setTodos(completed);\n  }\n\n  const deleteTodo = id => {\n    const deleted = [...todos].filter(todo => todo.id !== id);\n    setTodos(deleted);\n  }\n\n  const updateTodo = (id, newValue) => {\n    if(!newValue.title || /^\\s*&/.test(newValue.title)) {\n      return;\n    }\n    setTodos(prev => prev.map(item => (item.id === id ? newValue : item)));\n  }\n\n  return (\n    <div className=\"todo-app\">\n      <h1>What's the Plan for Today?</h1>\n      <InputForm onSubmit={addTodo} />\n      <TodoList todos={todos} completeTodo={completeTodo} deleteTodo={deleteTodo} updateTodo={updateTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}